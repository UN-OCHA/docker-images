SED=/usr/bin/sed
UNIQ=/usr/bin/uniq
TARGETPLATFORM=

buildx: clean template
	$(DOCKER) buildx build \
		--no-cache \
		--build-arg VCS_REF=`git rev-parse --short HEAD` \
		--build-arg VCS_URL=`git config --get remote.origin.url | sed 's#git@github.com:#https://github.com/#'` \
		--build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
		--build-arg VERSION=$(VERSION) \
		--build-arg EXTRAVERSION=$(EXTRAVERSION) \
		--build-arg UPSTREAM=$(UPSTREAM) \
		--tag $(ORGANISATION)/$(IMAGE):$(VERSION)$(EXTRAVERSION) \
        --push --platform linux/arm64,linux/amd64 \
		$(EXTRAOPTIONS) \
		. 2>&1 | tee buildlog.txt

testx:
	$(DOCKER) run --rm --name php-$(IMAGE)-$(VERSION)$(EXTRAVERSION) --entrypoint /usr/bin/php $(ORGANISATION)/$(IMAGE):$(VERSION)$(EXTRAVERSION) -d display_errors=true --version
	$(DOCKER) run --rm --name php-$(IMAGE)-$(VERSION)$(EXTRAVERSION) --entrypoint /usr/bin/php $(ORGANISATION)/$(IMAGE):$(VERSION)$(EXTRAVERSION) -d display_errors=true -r 'return rawurldecode("Test%21");'
	$(DOCKER) run --rm --name nginx-$(IMAGE)-$(VERSION)$(EXTRAVERSION) --entrypoint /usr/sbin/nginx $(ORGANISATION)/$(IMAGE):$(VERSION)$(EXTRAVERSION) -q

tagx:
	@$(ECHO) "Creating additional manifest file."
	@$(ECHO) "Waiting for registry propagation..."
	@sleep 5
	@$(ECHO) "Refreshing authentication..."
	@aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/unocha 2>&1 | grep -v "WARNING" || true
	@$(ECHO) "Creating manifest tag..."
	@for i in 1 2 3 4 5; do \
		$(DOCKER) buildx imagetools create -t $(ORGANISATION)/$(IMAGE):$(MANIFEST_VERSION) $(ORGANISATION)/$(IMAGE):$(VERSION)$(EXTRAVERSION) && break || \
		($(ECHO) "Attempt $$i/5 failed, waiting 3 seconds..." && sleep 3); \
	done || ($(ECHO) "Failed to create manifest after 5 attempts" && exit 1)

itso: buildx tagx clean
