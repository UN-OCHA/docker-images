FROM unocha/alpine-base-s6:%%UPSTREAM%%

MAINTAINER UN-OCHA Operations <ops+docker@humanitarianresponse.info>

# Thanks to orakili <docker@orakili.net>

# Parse arguments for the build command.
ARG UPSTREAM
ARG VERSION
ARG VCS_URL
ARG VCS_REF
ARG BUILD_DATE

# A little bit of metadata management.
# See http://label-schema.org/
LABEL org.label-schema.schema-version="1.0" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.vendor="UN-OCHA" \
      org.label-schema.version=$VERSION \
      org.label-schema.vcs-url=$VCS_URL \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.name="base-php" \
      org.label-schema.description="This service provides a base php-fpm platform." \
      org.label-schema.architecture="x86_64" \
      org.label-schema.distribution="Alpine Linux" \
      org.label-schema.distribution-version="$UPSTREAM" \
      info.humanitarianresponse.php=$VERSION \
      info.humanitarianresponse.php.modules="bcmath bz2 calendar ctype curl dom exif fileinfo fpm gd gettext iconv igbinary imagick intl json mcrypt memcached mysqli opcache openssl pdo pdo_mysql phar posix redis shmop sysvmsg sysvsem sysvshm simplexml sockets wddx xml xmlreader xmlwriter xsl zip zlib" \
      info.humanitarianresponse.php.sapi="fpm"

# Default PHP configuration variables. These can be overridden via the environment.
ENV PS1="\u@\h:\w\n\$ " \
    PHP_ENVIRONMENT=production \
    PHP_SYSLOG_FACILITY=LOG_LOCAL4 \
    PHP_ERROR_LOG=syslog \
    PHP_RUN_USER=appuser \
    PHP_RUN_GROUP=appuser \
    PHP_MAX_CHILDREN=16 \
    PHP_START_SERVERS=2 \
    PHP_MIN_SPARE_SERVERS=1 \
    PHP_MAX_SPARE_SERVERS=2 \
    PHP_MAX_REQUESTS=1000 \
    PHP_MEMORY_LIMIT=256M \
    PHP_MAX_EXECUTION_TIME=60s \
    PHP_POST_MAX_SIZE=100m \
    PHP_UPLOAD_MAX_FILESIZE=100m \
    PHP_MAX_INPUT_VARS=1000 \
    # Allow developers to disable opcache, so local changes show up immediately.
    # See https://humanitarian.atlassian.net/browse/OPS-7156
    PHP_OPCACHE_ENABLE=1 \
    PHP_OPCACHE_REVALIDATE_FREQ=300 \
    # Allow developers to use and configure xdebug.
    PHP_XDEBUG=false \
    PHP_XDEBUG_REMOTE_HOST=127.0.0.1 \
    PHP_XDEBUG_REMOTE_AUTOSTART=0 \
    PHP_XDEBUG_REMOTE_ENABLE=0 \
    PHP_XDEBUG_REMOTE_PORT=9001 \
    PHP_XDEBUG_DEFAULT_ENABLE=0 \
    PHP_XDEBUG_REMOTE_CONNECT_BACK=0 \
    # Oh, this is hideous, but it does solve the iconv problem.
    # See https://humanitarian.atlassian.net/browse/OPS-6486
    LD_PRELOAD=/usr/lib/preloadable_libiconv.so \
    # Specify a mupdf version for ReliefWeb.
    # This needs to be built from source, as the Alpine edge version has library depend issues on the "old" PHP7.2 :-)
    # See https://humanitarian.atlassian.net/browse/OPS-6833
    MUPDF_VERSION=1.17.0

# Copy custom config files into the container.
COPY etc/php7 etc/services/run_fpm etc/msmtprc /tmp/

RUN \
    echo "@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories && \
    # Install standard packages from $UPSTREAM.
    apk -U upgrade && \
    apk add --update-cache \
      fcgi \
      gnu-libiconv@edgecommunity \
      imagemagick \
      msmtp \
      php7-bcmath \
      php7-bz2 \
      php7-calendar \
      php7-ctype \
      php7-curl \
      php7-dom \
      php7-exif \
      php7-iconv \
      php7-fileinfo \
      php7-fpm \
      php7-gd \
      php7-gettext \
      php7-iconv \
      php7-imagick \
      php7-intl \
      php7-json \
      php7-mbstring \
      php7-mcrypt \
      # php7-memcached \
      php7-mysqli \
      php7-opcache \
      php7-openssl \
      php7-pdo \
      php7-pdo_mysql \
      php7-phar \
      php7-posix \
      # php7-redis \
      php7-session \
      php7-shmop \
      php7-sysvmsg \
      php7-sysvsem \
      php7-sysvshm \
      php7-simplexml \
      php7-sockets \
      php7-tokenizer \
      php7-wddx \
      php7-xml \
      php7-xmlreader \
      php7-xmlwriter \
      php7-xsl \
      php7-zip \
      php7-zlib \
      php7-pecl-xdebug \
      pngquant && \
    # Install build dependencies in order to build the memcache and redis extension
    apk add --virtual .build-dependencies \
      autoconf \
      build-base \
      file \
      g++ \
      git \
      gzip \
      make \
      libmemcached-dev \
      patch \
      php7-dev \
      re2c \
      tar \
      zlib-dev && \
    cd /tmp && \
    # Build memcached and redis extensions from source, *without* igbinary.
    apk add libmemcached-libs && \
    cd /tmp && \
      git clone https://github.com/php-memcached-dev/php-memcached && \
      cd php-memcached && \
        phpize7 && \
        ./configure CFLAGS="-O2 -g" --with-php-config=/usr/bin/php-config7 && \
        make && \
        make install && \
        cd .. && \
      rm -rf php-memcached && \
      git clone https://github.com/phpredis/phpredis && \
      cd phpredis && \
        phpize7 && \
        ./configure CFLAGS="-O2 -g" --with-php-config=/usr/bin/php-config7 && \
        make && \
        make install && \
        cd .. && \
      rm -rf phpredis && \
      rm -rf /usr/include/php/ && \
    # Build and install mupdf tools.
    cd /tmp && \
      git clone --branch=$MUPDF_VERSION --recursive git://git.ghostscript.com/mupdf.git && \
      cd mupdf && git submodule update --init && \
        make HAVE_X11=no HAVE_GLUT=no USE_SYSTEM_LIBS=no prefix=/usr/local install && \
      cd /tmp && rm -rf /tmp/mupdf* && \
    apk del .build-dependencies && \
    # Install igbinary.
    apk add php7-pecl-igbinary && \
    # Downgrade ghostscript for pdf thumbnails.
    # See https://humanitarian.atlassian.net/browse/OPS-5925
    echo "@3-4-main http://dl-cdn.alpinelinux.org/alpine/v3.4/main" >> /etc/apk/repositories && \
    apk add --no-cache \
      'freetype@3-4-main=~2.6' \
      'ghostscript@3-4-main=~9.22' \
      'fontconfig@3-4-main=~2.12.1' && \
    # Tidy.
    rm -rf /var/cache/apk/* && \
    # Setup directory structure for FPM.
    mkdir -p /etc/services.d/fpm /srv/www/html && \
    mv /tmp/msmtprc /etc/msmtprc && \
    mv /tmp/run_fpm /etc/services.d/fpm/run && \
    \
    # Fixup the sendmail path for msmtp and set it as mailer.
    ln -sf /usr/bin/msmtp /usr/sbin/sendmail && \
    ln -sf /usr/bin/msmtp /usr/bin/sendmail && \
    \
    # Configure php.
    rm -rf /etc/php7 && \
    mkdir -p /etc/php7 && \
    mv -f /tmp/php.ini /tmp/conf.d /tmp/php-fpm.conf /tmp/php-fpm.d /tmp/environment.d /etc/php7 && \
    \
    # Configure PHP logs.
    rm -rf /var/log/php7 && \
    mkdir /var/log/php && \
    # Cleanup tmp dir.
    rm -rf /tmp/*

# This is where the magic happens.
WORKDIR /srv/www/html

EXPOSE 9000

# Add a health check for the FPM server on port 9000.
HEALTHCHECK --interval=60s --timeout=5s \
        CMD REDIRECT_STATUS=true SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
