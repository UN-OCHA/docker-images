FROM unocha/nodejs-builder:%%UPSTREAM%%

MAINTAINER UN-OCHA Operations <ops+docker@humanitarianresponse.info>

# Alpine based docker image.
# Includes php composer, ruby bundler, less, npm, jasmine, compass and drush.

# Parse arguments for the build command.
ARG VERSION
ARG VCS_URL
ARG VCS_REF
ARG BUILD_DATE

# A little bit of metadata management.
# See http://label-schema.org/
LABEL org.label-schema.schema-version="1.0" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.vendor="UN-OCHA" \
      org.label-schema.version=$VERSION \
      org.label-schema.vcs-url=$VCS_URL \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.name="unified-builder" \
      org.label-schema.description="This service provides a builder container for PHP, with node and sass helpers." \
      org.label-schema.architecture="x86_64" \
      org.label-schema.distribution="Alpine Linux" \
      org.label-schema.distribution-version="3.12" \
      info.humanitarianresponse.php=$VERSION \
      info.humanitarianresponse.php.modules="bcmath bz2 calendar ctype curl dom exif fileinfo fpm ftp gd gettext iconv igbinary imagick imap intl json mcrypt memcached opcache openssl pdo pdo_mysql phar posix redis shmop soap sysvmsg sysvsem sysvshm simplexml sockets wddx xml xmlreader xmlwriter xsl zip zlib" \
      info.humanitarianresponse.php.sapi="cli" \
      info.humanitarianresponse.composer="1.8.4" \
      info.humanitarianresponse.node="12.18" \
      info.humanitarianresponse.npm="12.18" \
      info.humanitarianresponse.yarn="1.7.0" \
      info.humanitarianresponse.compass="3.2.0" \
      info.humanitarianresponse.jasmine="3.4.0" \
      info.humanitarianresponse.casperjs="1.1.3" \
      info.humanitarianresponse.phantomjs="2.0.0" \
      info.humanitarianresponse.python="3.8.5" \
      info.humanitarianresponse.ruby="2.3.7"

COPY drushrc.php /drushrc.php

RUN \
    echo "@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories && \
    apk -U upgrade && \
    npm install --global npm@latest && \
    npm install --global \
      jasmine && \
    rm -rf /tmp/npm-* && \
    \
    apk add --update-cache \
      bash \
      ca-certificates \
      curl \
      build-base \
      git \
      gzip \
      openssh-client \
      patch \
      rsync \
      tar \
      wget \
      php7@edgecommunity \
      php7-cli@edgecommunity \
      php7-bcmath@edgecommunity \
      php7-bz2@edgecommunity \
      php7-calendar@edgecommunity \
      php7-ctype@edgecommunity \
      php7-curl@edgecommunity \
      php7-dom@edgecommunity \
      php7-exif@edgecommunity \
      php7-iconv@edgecommunity \
      php7-fileinfo@edgecommunity \
      php7-ftp@edgecommunity \
      php7-gd@edgecommunity \
      php7-gettext@edgecommunity \
      php7-iconv@edgecommunity \
      php7-igbinary@edgecommunity \
      php7-imagick@edgecommunity \
      php7-imap@edgecommunity \
      php7-intl@edgecommunity \
      php7-json@edgecommunity \
      php7-mbstring@edgecommunity \
      php7-mcrypt@edgecommunity \
      php7-memcached@edgecommunity \
      php7-mysqli@edgecommunity \
      php7-mysqlnd@edgecommunity \
      php7-opcache@edgecommunity \
      php7-openssl@edgecommunity \
      php7-pdo@edgecommunity \
      php7-pdo_mysql@edgecommunity \
      php7-phar@edgecommunity \
      php7-posix@edgecommunity \
      php7-redis@edgecommunity \
      php7-session@edgecommunity \
      php7-shmop@edgecommunity \
      php7-sysvmsg@edgecommunity \
      php7-sysvsem@edgecommunity \
      php7-sysvshm@edgecommunity \
      php7-simplexml@edgecommunity \
      php7-soap@edgecommunity \
      php7-sockets@edgecommunity \
      php7-tokenizer@edgecommunity \
      # php7-wddx@edgecommunity \
      php7-xml@edgecommunity \
      php7-xmlreader@edgecommunity \
      php7-xmlwriter@edgecommunity \
      php7-xsl@edgecommunity \
      php7-zip@edgecommunity \
      php7-zlib@edgecommunity && \
    rm -rf /var/cache/apk/* && \
    cd /tmp && \
    ln -sf /usr/bin/php7 /usr/bin/php && \
    COMPOSER_HASH=$(curl -sS https://composer.github.io/installer.sig) && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('SHA384', 'composer-setup.php') === '$COMPOSER_HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php --install-dir=/usr/bin --filename=composer && \
    php -r "unlink('composer-setup.php');" && \
    # Add dependencies for casper and phantom.
    apk add --update-cache \
      fontconfig \
      libc6-compat && \
    rm -rf /var/cache/apk/* && \
    # Install casper.
    curl -L -o /tmp/casperjs.zip https://github.com/n1k0/casperjs/archive/master.zip && \
    mkdir -p /opt && \
    unzip /tmp/casperjs.zip -d /opt && \
    mv /opt/casperjs-master /opt/casperjs && \
    ln -s /opt/casperjs/bin/casperjs /usr/local/bin/casperjs && \
    rm -f /tmp/casperjs.zip

WORKDIR /tmp

CMD ["bash"]
