FROM unocha/nginx:%%UPSTREAM%%

MAINTAINER UN-OCHA Operations <ops+docker@humanitarianresponse.info>

# Thanks to orakili <docker@orakili.net>

# A little bit of metadata management.
ARG VERSION
ARG VCS_URL
ARG VCS_REF
ARG BUILD_DATE

ENV NGINX_SERVERNAME=localhost \
    DRUSH_VERSION=8 \
    DRUSH_RELEASE=8.1.15 \
    WP_RELEASE=2.1.0 \
    PAGER=more

LABEL org.label-schema.schema-version="1.0" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.vendor="UN-OCHA" \
      org.label-schema.version=$VERSION \
      org.label-schema.name="k8s" \
      org.label-schema.description="This service provides an nginx / php-fpm platform with composer, drush and wp-cli." \
      org.label-schema.vcs-url=$VCS_URL \
      org.label-schema.vcs-ref=$VCS_REF \
      info.humanitarianresponse.nginx=$VERSION \
      info.humanitarianresponse.php=$VERSION \
      info.humanitarianresponse.php.modules="bcmath bz2 calendar ctype curl dom exif fileinfo fpm ftp gd gettext iconv igbinary imagick imap intl json mcrypt memcached opcache openssl pdo pdo_mysql pdo_pgsql phar posix redis shmop soap sysvmsg sysvsem sysvshm simplexml sockets wddx xml xmlreader xmlwriter xsl zip zlib" \
      info.humanitarianresponse.php.sapi="fpm" \
      info.humanitarianresponse.composer="1.8.4" \
      info.humanitarianresponse.drush=$DRUSH_RELEASE \
      info.humanitarianresponse.wp=$WP_RELEASE

COPY etc/drush/drushrc.php patch/drush8-2282.patch patch/drush8-2567.patch \
       etc/php7/php.ini etc/php7/php-fpm.conf etc/php7/php-fpm.d/www.conf etc/services.d/run_fpm \
       etc/nginx/ etc/services.d/run_nginx \
       /etc/msmtprc \
     /tmp/

# Install standard PHP packages from Alpine and configure NGINX for standard operation.
RUN \
    # Setup NGINX.
    mkdir -p /etc/services.d/nginx && \
    rm -rf /etc/nginx/* && \
    mv /tmp/apps /tmp/fastcgi.conf /tmp/koi-utf /tmp/map_block_http_methods.conf /tmp/mime.types /tmp/upstream_phpcgi_unix.conf \
       /tmp/blacklist.conf /tmp/fastcgi_params /tmp/koi-win /tmp/map_https_fcgi.conf /tmp/nginx.conf \
       /tmp/sites-enabled /tmp/win-utf \
         /etc/nginx && \
    mv /tmp/run_nginx /etc/services.d/nginx/run && \
    mkdir -p  /var/cache/nginx && \
    chown appuser:appuser  /var/cache/nginx && \
    # Install PHP packages.
    apk -U upgrade && \
    apk add --update-cache \
      sed \
      fcgi \
      imagemagick \
      msmtp \
      php7 \
      php7-bcmath \
      php7-bz2 \
      php7-calendar \
      php7-ctype \
      php7-curl \
      php7-dom \
      php7-exif \
      php7-iconv \
      php7-fileinfo \
      php7-fpm \
      php7-gd \
      php7-gettext \
      php7-iconv \
      php7-imagick \
      php7-intl \
      php7-json \
      php7-mbstring \
      php7-mcrypt \
      php7-memcached \
      php7-mysqli \
      php7-opcache \
      php7-openssl \
      php7-pdo \
      php7-pdo_mysql \
      php7-pdo_pgsql \
      php7-phar \
      php7-posix \
      php7-redis \
      php7-shmop \
      php7-sysvmsg \
      php7-sysvsem \
      php7-sysvshm \
      php7-simplexml \
      php7-sockets \
      php7-tokenizer \
      php7-wddx \
      php7-xml \
      php7-xmlreader \
      php7-xmlwriter \
      php7-xsl \
      php7-zip \
        mysql-client \
        postgresql-client && \
    rm -rf /var/cache/apk/* && \
    \
    # Setup directory structure and configure FPM.
    mkdir -p /etc/services.d/fpm /srv/www/html && \
    mv /tmp/msmtprc /etc/msmtprc && \
    mv /tmp/run_fpm /etc/services.d/fpm/run && \
    mv /tmp/php.ini /etc/php7/php.ini && \
    mv /tmp/php-fpm.conf /etc/php7/php-fpm.conf && \
    mv /tmp/www.conf /etc/php7/php-fpm.d/www.conf && \
    \
    # Fixup the sendmail path for msmtp and set it as mailer.
    ln -sf /usr/bin/msmtp /usr/sbin/sendmail && \
    ln -sf /usr/bin/msmtp /usr/bin/sendmail && \
    \
    # Configure PHP logs.
    rm -rf /var/log/php7 && \
    mkdir /var/log/php && \
    touch /var/log/php/error.log && \
    touch /var/log/php/www-error.log && \
    touch /var/log/php/www-slow.log && \
    \
    # Install composer, as suggested by https://getcomposer.org/
    # and https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md
    COMPOSER_HASH=$(curl -sS https://composer.github.io/installer.sig) && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('SHA384', 'composer-setup.php') === '$COMPOSER_HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php --install-dir=/usr/bin --filename=composer && \
    php -r "unlink('composer-setup.php');" && \
    # Install drush and symlink it somewhere useful.
    COMPOSER_HOME=/usr/local/drush$DRUSH_VERSION \
      composer global require drush/drush:$DRUSH_RELEASE && \
    cd /usr/local/drush8/vendor/drush/drush && \
      patch -p1 -i /tmp/drush8-2282.patch && \
      patch -p1 -i /tmp/drush8-2567.patch && \
    cd / && \
    ln -sf /usr/local/drush$DRUSH_VERSION/vendor/bin/drush /usr/bin/drush && \
    drush status && \
    # Install registry_rebuild to the appuser's homedir.
    drush -y @none dl --destination=/home/appuser/.drush/commands registry_rebuild-7.x && \
    # Ensure the appuser's drush directory is writable.
    chown -R appuser:appuser /home/appuser/.drush && \
    # Symlink the appuser's drush module to root's.
    mkdir -p /root/.drush && \
    ln -s /home/appuser/.drush/commands /root/.drush/commands && \
    # Add our default drushrc.php file.
    mkdir -p /etc/drush && \
    mv /tmp/drushrc.php /etc/drush/drushrc.php && \
    # Cleanup.
    rm -rf /tmp/* && \
    # Install wp-cli and symlink it somewhere useful.
    COMPOSER_HOME=/usr/local/wp$WP_RELEASE  \
      composer global require wp-cli/wp-cli:$WP_RELEASE && \
    ln -sf /usr/local/wp$WP_RELEASE/vendor/wp-cli/wp-cli/bin/wp /usr/bin/wp && \
    wp --info

# Add a health check for the FPM server on port 9000.
HEALTHCHECK --interval=60s --timeout=5s \
        CMD REDIRECT_STATUS=true SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect /var/run/php-fpm7.sock

EXPOSE 80
