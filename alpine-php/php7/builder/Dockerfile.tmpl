FROM unocha/base-php7:%%UPSTREAM%%

MAINTAINER UN-OCHA Operations <ops+docker@humanitarianresponse.info>

# Alpine based docker image.
# Includes php composer, ruby bundler, less, npm, jasmine, compass and drush.

# Parse arguments for the build command.
ARG VERSION
ARG VCS_URL
ARG VCS_REF
ARG BUILD_DATE

ENV NODE_APP_DIR=/srv/www \
    NODE_PATH=/usr/lib/node_modules \
    NPM_CONFIG_SPIN=false \
    NPM_CONFIG_PROGRESS=false \
    SRC_DIR=/src \
    PS1="\u@\h:\w\n; "

# A little bit of metadata management.
# See http://label-schema.org/
LABEL org.label-schema.schema-version="1.0" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.vendor="UN-OCHA" \
      org.label-schema.version=$VERSION \
      org.label-schema.vcs-url=$VCS_URL \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.name="unified-builder" \
      org.label-schema.description="This service provides a builder container for PHP, with node and sass helpers." \
      org.label-schema.architecture="x86_64" \
      org.label-schema.distribution="Alpine Linux" \
      org.label-schema.distribution-version="3.10.2" \
      info.humanitarianresponse.php=$VERSION \
      info.humanitarianresponse.php.modules="bcmath bz2 calendar ctype curl dom exif fileinfo fpm ftp gd gettext iconv igbinary imagick imap intl json mcrypt memcached opcache openssl pdo pdo_mysql phar posix redis shmop soap sysvmsg sysvsem sysvshm simplexml sockets wddx xml xmlreader xmlwriter xsl zip zlib" \
      info.humanitarianresponse.php.sapi="cli" \
      info.humanitarianresponse.composer="1.10.6" \
      info.humanitarianresponse.drush="8.3.4-dev" \
      info.humanitarianresponse.node="12.15.0-r1" \
      info.humanitarianresponse.npm="12.15.0-r1" \
      info.humanitarianresponse.yarn="1.22.4" \
      info.humanitarianresponse.bower="1.8.8" \
      info.humanitarianresponse.compass="3.2.0" \
      info.humanitarianresponse.jasmine="3.5.0" \
      info.humanitarianresponse.grunt="1.3.2" \
      info.humanitarianresponse.webpack="4.43.0" \
      info.humanitarianresponse.casperjs="1.1.3" \
      info.humanitarianresponse.phantomjs="2.0.0" \
      info.humanitarianresponse.ruby="2.3.1"

ENV DRUSH_VERSION=8 \
    DRUSH_RELEASE=8.x-dev

COPY drushrc.php /drushrc.php

# Install nodejs as per the nodejs-base image.
RUN apk add --update-cache \
      bash \
      build-base \
      ca-certificates \
      curl \
      build-base \
      git \
      gzip \
      openssh-client \
      patch \
      rsync \
      tar \
      wget \
      git \
      python \
      fontconfig \
      libc6-compat \
      nodejs \
      npm && \
    USER=root npm install -g \
        grunt-cli \
        bower \
        jasmine \
        webpack \
        yarn && \
    rm -rf /var/cache/apk/* && \
    npm cache clean --force && \
    rm -rf /tmp /root/.node-gyp && \
    mkdir -p /tmp && \
    chmod 1777 /tmp && \
    cd / && \
    ln -sf /usr/bin/php7 /usr/bin/php && \
    COMPOSER_HASH=$(curl -sS https://composer.github.io/installer.sig) && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('SHA384', 'composer-setup.php') === '$COMPOSER_HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php --install-dir=/usr/bin --filename=composer && \
    php -r "unlink('composer-setup.php');" && \
    # Install drush and symlink it somewhere useful.
    COMPOSER_HOME=/usr/local/drush$DRUSH_VERSION \
      composer global require drush/drush:$DRUSH_RELEASE && \
    ln -sf /usr/local/drush$DRUSH_VERSION/vendor/bin/drush /usr/bin/drush && \
    drush status && \
    # Install registry_rebuild to the appuser's homedir.
    drush -y @none dl --destination=/home/appuser/.drush/commands registry_rebuild-7.x && \
    # Ensure the appuser's drush directory is writable.
    chown -R appuser:appuser /home/appuser/.drush && \
    # Symlink the appuser's drush module to root's.
    mkdir -p /root/.drush && \
    ln -s /home/appuser/.drush/commands /root/.drush/commands && \
    # Add our default drushrc.php file.
    mkdir -p /etc/drush && \
    mv /drushrc.php /etc/drush/drushrc.php && \
    # Install casper.
    curl -L -o /tmp/casperjs.zip https://github.com/n1k0/casperjs/archive/master.zip && \
    mkdir -p /opt && \
    unzip /tmp/casperjs.zip -d /opt && \
    mv /opt/casperjs-master /opt/casperjs && \
    ln -s /opt/casperjs/bin/casperjs /usr/local/bin/casperjs && \
    rm -f /tmp/casperjs.zip && \
    # Found an actual working PhantomJS at http://fabiorehm.com/blog/2015/07/22/building-a-minimum-viable-phantomjs-2-docker-image
    # It's a year old, but it's newer than the old one (1.9.8) and it works.
    # Mind you, only extract part of the archive, or our crafted passwd and shadow files wil be overwritten.
    curl -Ls https://github.com/fgrehm/docker-phantomjs2/releases/download/v2.0.0-20150722/dockerized-phantomjs.tar.gz \
      | tar xz -C / bin etc/fonts etc/ssl lib lib64 usr/lib usr/local usr/share && \
    # No need to run fpm, remove the init file.
    rm -rf /etc/services.d/fpm && \
    mkdir -p ${SRC_DIR} ${NODE_APP_DIR}

WORKDIR ${SRC_DIR}

CMD ["bash"]
