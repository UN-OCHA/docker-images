# -*- mode: nginx; mode: flyspell-prog;  ispell-current-dictionary: american -*-

## HTTP server.
server {
    ## Whut?
    listen 80; # IPv4
    ## Replace the IPv6 address by your own address. The address below
    ## was stolen from the wikipedia page on IPv6.
    # listen [fe80::202:b3ff:fe1e:8330]:80 ipv6only=on;

    ## Define the nginx variables that we are going to use in LUA.
    set $nginx_servername_main "";
    set $nginx_servername_redir 0;

    ## The first HTTP HOST name in the list - this is the default.
    set_by_lua $nginx_servername_main '
      ngx.ctx.host_name_list = {}
      for name in os.getenv("NGINX_SERVERNAME"):gmatch("[%S]+") do
        name = name:lower()
        table.insert(ngx.ctx.host_name_list, name)
      end
      return ngx.ctx.host_name_list[1]
    ';

    ## Check if the current HTTP_HOST is in the allowed list. Set redirect var if not.
    set_by_lua $nginx_servername_redir '
      http_host = ngx.var.http_host:lower()
      for i = 1, #ngx.ctx.host_name_list do
        if ngx.ctx.host_name_list[i] == http_host then
          return 0
        end
      end
      return 1
    ';


    ## This is the one and only wildcard vhost.
    server_name _;
    # limit_conn arbeit 512;

    ## Access and error logs.
    access_log /var/log/nginx/access.log logstash;
    error_log /var/log/nginx/error.log;

    ## See the blacklist.conf file at the parent dir: /etc/nginx.
    ## Deny access based on the User-Agent header.
    if ($bad_bot) {
        return 444;
    }
    ## Deny access based on the Referer header.
    if ($bad_referer) {
        return 444;
    }

    ## Protection against illegal HTTP methods. Out of the box only HEAD,
    ## GET and POST are allowed.
    if ($not_allowed_method) {
        return 405;
    }

    ## If NGINX is not accessed via one of the listed host names, redirect to the main one.
    if ($nginx_servername_redir) {
      return 301 $http_x_forwarded_proto://$nginx_servername_main$request_uri;
    }

    ## Force all traffic onto HTTPS if needed.
    if ($http_x_forwarded_proto != "https") {
        return 301 https://$nginx_servername_main$request_uri;
    }

    ## Filesystem root of the site and index.
    root /srv/www/html;
    index index.php;

    ## If you're using a Nginx version greater or equal to 1.1.4 then
    ## you can use keep alive connections to the upstream be it
    ## FastCGI or Apache. If that's not the case comment out the line below.
    fastcgi_keep_conn on; # keep alive to the FCGI upstream

    ## Uncomment if you're proxying to Apache for handling PHP.
    #proxy_http_version 1.1; # keep alive to the Apache upstream

    ## Optionally include custom config files from outside the container.
    include /etc/nginx/custom/*.conf;

    ################################################################
    ### Generic configuration: for most Drupal 7 sites.
    ################################################################
    include apps/drupal/drupal.conf;

} # HTTP server
