#!/usr/bin/with-contenv sh

mkdir -p ${PGDATA}

# taken care of in initialization
#chown -R postgres:postgres ${PGDATA}

# if data folder is empty, initialize db
test "$(ls -A "$PGDATA" 2>/dev/null)" || s6-setuidgid postgres /usr/bin/initdb -D $PGDATA

# add md5 auth option for all internal clients
[ $(grep -cE "host(\s)+all(\s)+all(\s)+0.0.0.0/0(\s)+md5" $PGDATA/pg_hba.conf) -eq 1 ] || \
  echo "host all all 0.0.0.0/0 md5" >> $PGDATA/pg_hba.conf

# add a user, pass and a database owned by that user
TMP_FILE=/tmp/pgsql.initialize.txt
if [ ! -f $TMP_FILE ]; then
    # create user and db
    PGSQL_USER=${PGSQL_USER:-"dbuser"}
    PGSQL_PASS=${PGSQL_PASS:-"dbpass"}
    PGSQL_DB=${PGSQL_DB:-"dbname"}
    cat > $TMP_FILE << EOSQL
CREATE USER $PGSQL_USER WITH SUPERUSER;
ALTER USER $PGSQL_USER WITH PASSWORD '$PGSQL_PASS';
CREATE DATABASE $PGSQL_DB OWNER $PGSQL_USER;
EOSQL
    s6-setuidgid postgres pg_ctl -w start
    s6-setuidgid postgres psql -a -f $TMP_FILE
    s6-setuidgid postgres pg_ctl stop
fi

args="-D ${PGDATA}"
[ -z ${PG_CONFIG_FILE} ] || args="--config-file=${PG_CONFIG_FILE}"

exec s6-setuidgid postgres /usr/bin/postgres -h 0.0.0.0 $args
