FROM unocha/debian-base-s6:%%UPSTREAM%%

# Parse arguments for the build command.
ARG VERSION
ARG VCS_URL
ARG VCS_REF
ARG BUILD_DATE
ARG NODE_VERSION

# A little bit of metadata management.
# See http://label-schema.org/
LABEL org.label-schema.schema-version="1.0" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.vendor="UN-OCHA" \
      org.label-schema.version=$VERSION \
      org.label-schema.vcs-url=$VCS_URL \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.name="debian-snap-bases" \
      org.label-schema.description="This service provides a base Debian image with nodejs for a Puppeteer/Chrome snapshot service." \
      org.label-schema.architecture="x86_64" \
      org.label-schema.distribution="Debian Linux" \
      org.label-schema.distribution-version="Jessie" \
      info.humanitarianresponse.nodejs="$NODE_VERSION"

ENV NODE_APP_DIR=/srv/www \
    PORT=8442

COPY assets/ /tmp/assets

RUN mkdir -p /var/run/s6 && \
    apt-get -qy update && \
    apt-get -qy install \
        psmisc \
        net-tools \
        libgconf-2-4 \
        imagemagick \
        fonts-freefont-ttf \
        fonts-roboto && \
    mv -f /tmp/Roboto*.ttf /usr/share/fonts/truetype/roboto/ && \
    curl -sL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    # Cleanup done, now ensure node starts at boot.
    mkdir -p /srv/www /srv/example /etc/services.d/node /root && \
    mv /tmp/run_node /etc/services.d/node/run && \
    # Install the example app into /srv/example
    mv /tmp/server.js /srv/example/ && \
    mv /tmp/package.json /srv/example/ && \
    cd /srv/example && \
      npm install && \
    rm -rf /tmp/*

WORKDIR "${NODE_APP_DIR}"

EXPOSE ${PORT}
