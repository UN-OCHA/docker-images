FROM unocha/debian-base-s6:8-slim

# Parse arguments for the build command.
ARG VERSION
ARG VCS_URL
ARG VCS_REF
ARG BUILD_DATE

# A little bit of metadata management.
# See http://label-schema.org/
LABEL org.label-schema.schema-version="1.0" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.vendor="UN-OCHA" \
      org.label-schema.version=$VERSION \
      org.label-schema.vcs-url=$VCS_URL \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.name="snapper-nodejs" \
      org.label-schema.description="This service provides a Puppeteer/Chrome snapshot service." \
      org.label-schema.architecture="x86_64" \
      org.label-schema.distribution="Debian Linux" \
      org.label-schema.distribution-version="Jessie" \
      info.humanitarianresponse.nodejs="$NODE_VERSION"

ENV NODE_APP_DIR=/srv/www \
    PORT=8442

COPY run_node package.json server.js usr/share/fonts/truetype/roboto /tmp/

RUN mkdir -p /var/run/s6 && \
    curl -s https://dl-ssl.google.com/linux/linux_signing_key.pub -o /tmp/linux_signing_key.pub && \
    apt-key add /tmp/linux_signing_key.pub && \
    rm -f /tmp/linux_signing_key.pub && \
    echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list && \
    apt-get -qy update && \
    apt-get -qy install \
        psmisc \
        net-tools \
        libgconf-2-4 \
        imagemagick \
        ttf-freefont \
        fonts-roboto && \
    apt-get -qy install \
        --no-install-recommends \
        google-chrome-unstable && \
    mv -f /tmp/Roboto*.ttf /usr/share/fonts/truetype/roboto/ && \
    curl -sL https://deb.nodesource.com/setup_8.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    # Cleanup done, now ensure node starts at boot.
    mkdir -p /srv/www /srv/example /etc/services.d/node /root && \
    mv /tmp/run_node /etc/services.d/node/run && \
    mv /tmp/server.js /srv/example/ && \
    mv /tmp/package.json /srv/example/ && \
    rm -rf /etc/services.d/chromeheadless && \
    rm -rf /tmp/*

WORKDIR "${NODE_APP_DIR}"

EXPOSE ${PORT}

# mainly used to serve stuff so it makes sense to use ${NODE_APP_DIR} as WORKDIR
# but it doesnt make sense to make a volume out of it, unless you are doing it at runtime.
# VOLUME ["${NODE_APP_DIR}"]
