FROM public.ecr.aws/unocha/base-php:%%UPSTREAM%%

MAINTAINER UN-OCHA Operations <ops+docker@humanitarianresponse.info>

# Thanks to orakili <docker@orakili.net>

# A little bit of metadata management.
ARG VERSION
ARG VCS_URL
ARG VCS_REF
ARG BUILD_DATE

ENV PAGER=more

LABEL org.label-schema.schema-version="1.0" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.vendor="UN-OCHA" \
      org.label-schema.version=$VERSION \
      org.label-schema.name="php" \
      org.label-schema.description="This service provides a php-fpm platform with composer." \
      org.label-schema.vcs-url=$VCS_URL \
      org.label-schema.vcs-ref=$VCS_REF \
      info.humanitarianresponse.composer="2.1.3"

COPY etc/my.cnf.d/client.cnf /client.cnf

RUN apk add --update-cache \
        git \
        patch \
        php81 \
        mysql-client && \
    rm -rf /var/cache/apk/* && \
    \
    # Configure the MySQL client library.
    mv -f /client.cnf /etc/my.cnf.d/client.cnf && \
    \
    # Install composer, as suggested by https://getcomposer.org/
    # and https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md
    COMPOSER_HASH=$(curl -sS https://composer.github.io/installer.sig) && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('SHA384', 'composer-setup.php') === '$COMPOSER_HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php --install-dir=/usr/bin --filename=composer && \
    php -r "unlink('composer-setup.php');" && \
    # Clear the cache to reduce the layer size.
    rm -rf /var/cache/apk/*
